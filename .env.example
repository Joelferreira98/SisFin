# ==============================================
# CONFIGURAÇÕES DO BANCO DE DADOS
# ==============================================

# URL de conexão com o banco PostgreSQL
# Formato: postgresql://usuario:senha@host:porta/banco
# Exemplo local: postgresql://financeuser:financepass@localhost:5432/financedb
# Exemplo Docker: postgresql://financeuser:financepass@db:5432/financedb
DATABASE_URL=postgresql://financeuser:SUA_SENHA_AQUI@localhost:5432/financedb

# ==============================================
# CONFIGURAÇÕES DE SESSÃO
# ==============================================

# Chave secreta para assinatura de sessões
# IMPORTANTE: Use uma chave aleatória de pelo menos 32 caracteres
# Exemplo: openssl rand -base64 32
SESSION_SECRET=sua-chave-secreta-super-segura-de-32-caracteres-aqui

# ==============================================
# CONFIGURAÇÕES DA EVOLUTION API (WHATSAPP)
# ==============================================

# URL da sua instância Evolution API
# Exemplo: https://evolution-api.exemplo.com
EVOLUTION_API_URL=https://sua-evolution-api-url.com

# Chave da API fornecida pela Evolution API
# Obtida no painel da Evolution API
EVOLUTION_API_KEY=sua-chave-da-evolution-api-aqui

# Nome da instância padrão do WhatsApp
# Usado como instância padrão do sistema
EVOLUTION_INSTANCE_NAME=instancia-padrao-sistema

# ==============================================
# CONFIGURAÇÕES DO AMBIENTE
# ==============================================

# Ambiente de execução (development, production)
NODE_ENV=development

# ==============================================
# CONFIGURAÇÕES OPCIONAIS
# ==============================================

# Porta do servidor (padrão: 5000)
# PORT=5000

# Host do servidor (padrão: 0.0.0.0)
# HOST=0.0.0.0

# ==============================================
# CONFIGURAÇÕES PARA PRODUÇÃO (VPS)
# ==============================================

# Para deployment em VPS, use as configurações abaixo:

# Banco de dados em container Docker
# DATABASE_URL=postgresql://financeuser:senha_segura@db:5432/financedb

# Chave de sessão para produção (deve ser diferente do desenvolvimento)
# SESSION_SECRET=chave-producao-super-segura-diferente-do-desenvolvimento

# Environment para produção
# NODE_ENV=production

# ==============================================
# INSTRUÇÕES DE CONFIGURAÇÃO
# ==============================================

# 1. Copie este arquivo para .env:
#    cp .env.example .env

# 2. Configure o banco de dados:
#    - Instale PostgreSQL localmente ou use Docker
#    - Crie o banco: sudo -u postgres createdb financedb;
#    - Configure usuário e senha
#    - Atualize a DATABASE_URL

# 3. Configure a Evolution API:
#    - Obtenha uma instância da Evolution API
#    - Configure EVOLUTION_API_URL e EVOLUTION_API_KEY
#    - Defina um nome para EVOLUTION_INSTANCE_NAME

# 4. Configure sessão segura:
#    - Gere uma chave aleatória: openssl rand -base64 32
#    - Use uma chave diferente para cada ambiente

# 5. Execute o projeto:
#    npm install
#    npm run db:push
#    npm run dev

# ==============================================
# TROUBLESHOOTING
# ==============================================

# Erro de conexão MySQL:
# - Verifique se o MySQL está rodando
# - Confirme usuário, senha e nome do banco
# - Teste conexão: mysql -u usuario -p banco

# Erro Evolution API:
# - Verifique se a URL está acessível
# - Confirme se a API_KEY está correta
# - Teste: curl -H "apikey: SUA_KEY" URL/instance

# Erro de sessão:
# - Verifique se SESSION_SECRET está configurado
# - Use uma chave de pelo menos 32 caracteres
# - Não use caracteres especiais que possam causar problemas

# ==============================================
# SEGURANÇA
# ==============================================

# NUNCA faça commit do arquivo .env para o repositório
# Sempre use valores diferentes para desenvolvimento e produção
# Mantenha as chaves da API em segurança
# Use HTTPS em produção
# Configure firewall adequadamente no VPS